---
title: "Uncertainty - Tidyverse 3"
subtitle: For loop variations and wrap-up
author: "Introduction to Quantitative Social Science"
institute: 
  - "Xiaolong Yang"
  - "University of Tokyo"
date: "July 7, 2022"
navigation: frame
format: 
  beamer: 
    navigation: horizontal
    theme: "Madrid"
    colortheme: "beaver"
    incremental: false
    default-image-extension: tex
    slide-level: 2
---

## Today's Game Plan

- **For loop**: variations
- `Tidyverse` recap
  
:::{.callout-note appearance="simple"}
Today's in-class assignment: `nazis-election`
::: 


## For loop variations

1. Modifying an existing object, instead of creating a new object
2. Looping over names or values, instead of indices


## Modifying an existing object

**For loop to modify an existing object**

```{r}
#| eval: false
#| echo: true 
df$a <- (df$a - min(df$a, na.rm = TRUE)) /
(max(df$a, na.rm = TRUE) - min(df$a, na.rm = TRUE))
df$b <- (df$b - min(df$b, na.rm = TRUE)) /
(max(df$b, na.rm = TRUE) - min(df$b, na.rm = TRUE))
df$c <- (df$c - min(df$c, na.rm = TRUE)) /
(max(df$c, na.rm = TRUE) - min(df$c, na.rm = TRUE))
df$d <- (df$d - min(df$d, na.rm = TRUE)) /
(max(df$d, na.rm = TRUE) - min(df$d, na.rm = TRUE))
```

## Modifying an existing object

**For loop to modify an existing object**

```{r}
#| eval: false
#| echo: true 

rescale01 <- function(x) {
  rng <- range(x, na.rm = TRUE)
  (x - rng[1]) / (rng[2] - rng[1])
}

df$a <- rescale01(df$a)
df$b <- rescale01(df$b)
df$c <- rescale01(df$c)
df$d <- rescale01(df$d)
```


## Modifying an existing object


```{r}
#| eval: false
#| echo: true 

for (i in seq_along(df)) {
  df[[i]] <- rescale01(df[[i]])
}
```

1. The output: no need to create new vector - **input as output**
2. The sequence: iterate over each column with `seq_along(df)`
3. The body: apply `rescale01()`



## Looping patterns

1. loop over the numeric indices
  - `for (i in seq_along(vec))`
  
```{r}
#| eval: false
#| echo: true 
for (i in seq_along(vec) {
  name <- names(vec)[[i]]
  value <- x[[i]]
}
```

## Looping patterns

1. loop over the numeric indices
  - `for (i in seq_along(vec))`

2. Loop over the elements
  - `for (x in vec)`

## Looping patterns

1. loop over the numeric indices
  - `for (i in seq_along(vec))`

2. Loop over the elements
  - `for (x in vec)`
  
3. Loop over the names
  - `for (nm in names(vec))`

## `Tidyverse` recap

R programming $\rightarrow$ data analysis 

- `baseR` as the basic syntax
- `tidyverse` as a dialect or specific syntax
  - philosophy: *"facilitate a conversation between a human and a computer about data"*

![`Tidyverse packages`](~/Desktop/tidyverse_celestial.png){width=40%}

## Component packages of tidyverse 

![`Data analysis workflow; R4DS`](~/Desktop/component.png){width=80%}

## Tidy: `dplyr`

:::: {.columns}

::: {.column width="70%"}
- Every column is variable
- Every row is an observation
- Every cell is a single value \newline
:::

::: {.column width="30%"}
![](~/Desktop/dplyr.png){width=50%}
:::

::::




## Tidy: `dplyr`: `mutate()`

![`mutate()`](~/Desktop/dplyr_mutate_blank.png){width=70%}

## Tidy: `dplyr`: `across()`

![`across()`](~/Desktop/across_blank.png){width=70%}

## Tidy: `dplyr`: `case_when()`
  
![`case_when()`](~/Desktop/dplyr_case_when.png){width=70%}

## Tidy: `dplyr`: `filter()`

![`filter()`](~/Desktop/dplyr_filter.jpg){width=70%}

## Tidy: `dplyr`: `group_by()`

![ `group_by()`](~/Desktop/ungroup_blank.png){width=70%}


## Transform: `dplyr` with `stringr` 

![`stringr` ](~/Desktop/str_squish_blank.png){width=70%}

## Transform: `dplyr` with `lubridate` 

![`lubridate` ](~/Desktop/lubridate_ymd_blank.png){width=70%}

## Visualize: `ggplot2`

![`ggplot2`](~/Desktop/ggplot2_blank.png){width=70%}

## Model: `modelr`

![`modelr`](~/Desktop/modelr.png){width=30%}

## Programming: `purrr` and `magrittr`

![](~/Desktop/purrr.png){width=50%}

![](~/Desktop/pipe.png){width=58%}

## Communication: `RMarkdown`

![](~/Desktop/rmarkdown_wizards.png){width=80%}


## Other useful resource

**Debugging in R** \newline

- [Advanced R: Debugging](https://adv-r.hadley.nz/debugging.html)
- [Debugging with the RStudio IDE](https://support.rstudio.com/hc/en-us/articles/205612627-Debugging-with-RStudio#entering-debug-mode-stopping)

**Looping patterns: advanced** \newline

- [Unknown output length](https://r4ds.had.co.nz/iteration.html#unknown-output-length)
- [Unknown sequence length](https://r4ds.had.co.nz/iteration.html#unknown-sequence-length)

## Summary

**What we learnt**

- for loop variations
- `tidyverse` packages and major functions covered in the **QSS Tidyverse** textbook 

## Reference

- [R for Data Science](https://r4ds.hadley.nz/functions.html#functions-are-for-humans-and-computers)
- Artwork by @[allison_horst](https://github.com/allisonhorst/stats-illustrations)


